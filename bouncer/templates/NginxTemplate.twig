server {
{% if allowNonSSL %}
  listen      {{ portHttp }};
  listen      [::]:{{ portHttp }};
{% endif %}
  listen      {{ portHttps }} ssl;
  listen      [::]:{{ portHttps }} ssl;
  server_name {{ serverName }};
  access_log  /var/log/bouncer/{{ name }}.access.log;
  error_log   /var/log/bouncer/{{ name }}.error.log;

{% if certType == 'TEMPORARY_CERT' %}
  ssl_certificate     /certs/example.crt;
  ssl_certificate_key /certs/example.key;
{% elseif certType == 'GLOBAL_CERT' %}
  ssl_certificate     /certs/global.crt;
  ssl_certificate_key /certs/global.key;
{% elseif certType == 'CUSTOM_CERT' %}
  ssl_certificate     /etc/nginx/sites-enabled/{{ customCertFile }};
  ssl_certificate_key /etc/nginx/sites-enabled/{{ customCertKeyFile }};
{% elseif certType == 'LETSENCRYPT_CERT' %}
  ssl_certificate     /etc/letsencrypt/live/{{ name }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ name }}/privkey.pem;
{% endif %}
  # ssl_protocols     TLSv1 TLSv1.1 TLSv1.2;
  # ssl_ciphers       HIGH:!aNULL:!MD5;

{% if allowLargePayloads %}
  client_max_body_size 0;
{% endif %}

  location / {
    proxy_set_header X-Real-IP  $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto https;
{% if hasHostOverride %}
    proxy_set_header Host {{ hostOverride }};
{% else %}
    proxy_set_header Host $host;
{% endif %}

{% if hasAuth %}
    auth_basic           "closed site";
    auth_basic_user_file sites-enabled/{{ authFile }};
{% endif %}

{% if allowWebsocketSupport %}
    # WebSocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
{% endif %}

{% if proxyTimeoutSeconds %}
    proxy_read_timeout    {{ proxyTimeoutSeconds }};
    proxy_connect_timeout {{ proxyTimeoutSeconds }};
    proxy_send_timeout    {{ proxyTimeoutSeconds }};
{% endif %}

    proxy_pass  {{ targetPath }};
  }
}

{% if not allowNonSSL %}
server {
  listen      {{ portHttp }};
  listen      [::]:{{ portHttp }};
  server_name {{ serverName }};
  return 301 https://$host$request_uri;
}
{% endif %}
