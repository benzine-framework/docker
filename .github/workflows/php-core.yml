name: Build PHP Core

permissions: read-all

on:
  push:
    paths:
      - ".github/workflows/php-core.yml"
      - "php/core/**"
      - "php/Dockerfile.Core"
  pull_request:
    branches:
      - "!dependabot/**"
  workflow_dispatch:
  workflow_run:
    workflows:
      - Build Marshall
    branches: ["master", "feature/**"]
    types:
      - completed

concurrency:
  group: php-core-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  php-core-build:
    name: "Build PHP Core"
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 15
      fail-fast: false
      matrix:
        version:
          - "7.0"
          - "7.1"
          - "7.2"
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
          - "8.2"
          - "8.3"
    env:
      PHP_PACKAGES_70: git           mariadb-client php7.0-apcu php7.0-bcmath php7.0-bz2 php7.0-cli php7.0-curl php7.0-gd php7.0-imap php7.0-imagick php7.0-intl php7.0-json php7.0-ldap                  php7.0-mbstring php7.0-mcrypt php7.0-memcache php7.0-memcached php7.0-mongodb php7.0-mysql php7.0-opcache php7.0-pgsql php7.0-phpdbg php7.0-pspell php7.0-redis php7.0-soap php7.0-sqlite php7.0-xdebug php7.0-xml php7.0-zip postgresql-client
      PHP_PACKAGES_71: git           mariadb-client php7.1-apcu php7.1-bcmath php7.1-bz2 php7.1-cli php7.1-curl php7.1-gd php7.1-imap php7.1-imagick php7.1-intl php7.1-json php7.1-ldap                  php7.1-mbstring php7.1-mcrypt php7.1-memcache php7.1-memcached php7.1-mongodb php7.1-mysql php7.1-opcache php7.1-pgsql php7.1-phpdbg php7.1-pspell php7.1-redis php7.1-soap php7.1-sqlite php7.1-xdebug php7.1-xml php7.1-zip postgresql-client
      PHP_PACKAGES_72: git           mariadb-client php7.2-apcu php7.2-bcmath php7.2-bz2 php7.2-cli php7.2-curl php7.2-gd php7.2-imap php7.2-imagick php7.2-intl php7.2-json php7.2-ldap                  php7.2-mbstring               php7.2-memcache php7.2-memcached php7.2-mongodb php7.2-mysql php7.2-opcache php7.2-pgsql php7.2-phpdbg php7.2-pspell php7.2-redis php7.2-soap php7.2-sqlite php7.2-xdebug php7.2-xml php7.2-zip postgresql-client
      PHP_PACKAGES_73: git htop mariadb-client php7.3-apcu php7.3-bcmath php7.3-bz2 php7.3-cli php7.3-curl php7.3-gd php7.3-imap php7.3-imagick php7.3-intl php7.3-json php7.3-ldap                  php7.3-mbstring               php7.3-memcache php7.3-memcached php7.3-mongodb php7.3-mysql php7.3-opcache php7.3-pgsql php7.3-phpdbg php7.3-pspell php7.3-redis php7.3-soap php7.3-sqlite php7.3-xdebug php7.3-xml php7.3-zip postgresql-client
      PHP_PACKAGES_74: git htop mariadb-client php7.4-apcu php7.4-bcmath php7.4-bz2 php7.4-cli php7.4-curl php7.4-gd php7.4-imap php7.4-imagick php7.4-intl php7.4-json php7.4-ldap                  php7.4-mbstring               php7.4-memcache                  php7.4-mongodb php7.4-mysql php7.4-opcache php7.4-pgsql php7.4-phpdbg php7.4-pspell php7.4-redis php7.4-soap php7.4-sqlite php7.4-xdebug php7.4-xml php7.4-zip postgresql-client
      PHP_PACKAGES_80: git htop mariadb-client php8.0-apcu php8.0-bcmath php8.0-bz2 php8.0-cli php8.0-curl php8.0-gd php8.0-imap php8.0-imagick php8.0-intl             php8.0-ldap php8.0-mailparse php8.0-mbstring               php8.0-memcache                  php8.0-mongodb php8.0-mysql php8.0-opcache php8.0-pgsql php8.0-phpdbg php8.0-pspell php8.0-redis php8.0-soap php8.0-sqlite php8.0-xdebug php8.0-xml php8.0-zip postgresql-client
      PHP_PACKAGES_81: git htop mariadb-client php8.1-apcu php8.1-bcmath php8.1-bz2 php8.1-cli php8.1-curl php8.1-gd php8.1-imap php8.1-imagick php8.1-intl             php8.1-ldap php8.1-mailparse php8.1-mbstring               php8.1-memcache                  php8.1-mongodb php8.1-mysql php8.1-opcache php8.1-pgsql php8.1-phpdbg php8.1-pspell php8.1-redis php8.1-soap php8.1-sqlite php8.1-xdebug php8.1-xml php8.1-zip postgresql-client
      PHP_PACKAGES_82: git htop mariadb-client php8.2-apcu php8.2-bcmath php8.2-bz2 php8.2-cli php8.2-curl php8.2-gd php8.2-imap php8.2-imagick php8.2-intl             php8.2-ldap php8.2-mailparse php8.2-mbstring               php8.2-memcache                  php8.2-mongodb php8.2-mysql php8.2-opcache php8.2-pgsql php8.2-phpdbg php8.2-pspell php8.2-redis php8.2-soap php8.2-sqlite php8.2-xdebug php8.2-xml php8.2-zip postgresql-client
      PHP_PACKAGES_83: git htop mariadb-client php8.3-apcu php8.3-bcmath php8.3-bz2 php8.3-cli php8.3-curl php8.3-gd php8.3-imap php8.3-imagick php8.3-intl             php8.3-ldap php8.3-mailparse php8.3-mbstring               php8.3-memcache                  php8.3-mongodb php8.3-mysql php8.3-opcache php8.3-pgsql php8.3-phpdbg php8.3-pspell php8.3-redis php8.3-soap php8.3-sqlite php8.3-xdebug php8.3-xml php8.3-zip postgresql-client
      COMPOSER_VERSION_70: 2.2.22
      COMPOSER_VERSION_71: 2.2.22
    steps:
      - name: Interpolate Envs
        id: vars
        run: |
          {
            VERSION=$(echo "${{ matrix.version }}" | tr -d '.')
            PACKAGE_LIST=PHP_PACKAGES_$VERSION
            echo php_packages=${!PACKAGE_LIST}
            COMPOSER_VERSION=${COMPOSER_VERSION_$VERSION:-"latest-stable"}
            echo COMPOSER_VERSION=${!COMPOSER_VERSION}
          } >> "$GITHUB_OUTPUT"

      - name: Show mangled envs
        run: |
          echo "Packages to be installed:"
          echo ${{ steps.vars.outputs.php_packages }}

      - uses: actions/github-script@v3
        name: Build Args
        id: build_args
        with:
          result-encoding: string
          script: return `PHP_PACKAGES=${{ steps.vars.outputs.php_packages }}\nPHP_VERSION=${{ matrix.version }}\nPHP_CORE_VERSION=benzine/php:core-${{ matrix.version }}\nCOMPOSER_VERSION=${{ steps.vars.outputs.COMPOSER_VERSION }}`

      - uses: actions/checkout@v4
        with:
          sparse-checkout: php

      - uses: docker/setup-qemu-action@v2

      - uses: docker/setup-buildx-action@v2

      - name: "Setup: Login to Docker Hub"
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: "Setup: Login to GHCR"
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GHCR_PASSWORD }}

      - name: "Build: Build & Push"
        uses: docker/build-push-action@v5
        with:
          context: php
          file: php/Dockerfile.Core
          target: php-core
          platforms: ${{ !env.ACT && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          pull: true
          push: ${{ !env.ACT && true || false }}
          tags: |
            ghcr.io/benzine-framework/php:core-${{ matrix.version }}
            gone/php:core-${{ matrix.version }}
            benzine/php:core-${{ matrix.version }}
          build-args: |
            ${{ steps.build_args.outputs.result }}
          cache-from: ${{ !env.ACT && 'type=gha' || 'type=local,src=/tmp' }}
          cache-to: ${{ !env.ACT && 'type=gha,mode=max' || 'type=local,dest=/tmp' }}
          build-contexts: |
            marshall=docker-image://benzine/marshall:latest
